from colorama import Fore, Style
import requests
from requests.exceptions import TooManyRedirects
import re
import urllib3

urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

def call_FroalaEditor_exploits(environment,app_module_name,header,component_name):
    print(f"| {Fore.WHITE}[|||] {Style.DIM}{Style.BRIGHT}[{component_name}] Checking XSS vulnerability in current version...{Style.RESET_ALL}")
    exploit_CVE202341592(environment,header,component_name)

def exploit_CVE202341592(environment,header,component_name):
    # Sending a GET request to the URL without following redirects
    url = environment+'/FroalaEditor_Demo/Blocks/FroalaEditor/Scripts/froala_editor.js'
    try:
        response = requests.get(
            url,
            headers=header,
            verify=False,
            allow_redirects=False,
        )
    except TooManyRedirects:
        print(
            f"| {Fore.WHITE}[|||] {Style.DIM}[{component_name}] Request aborted due to too many redirects.{Style.RESET_ALL}"
        )
        return

    # Checking the response code
    if response.status_code == 200:
        # Split the string by lines
        lines = response.text.splitlines()
        
        # Suponha que a codificação seja UTF-8 (ajuste se necessário)
        decoded_text = response.content.decode('utf-8')
        # Use regular expression para encontrar a versão
        match = re.search(r'VERSION="(.*?)"', decoded_text)

        if match:
            if match.group(1) <= '4.1.1':
                print(f"| {Fore.WHITE}[|||] {Style.RESET_ALL}{Fore.GREEN}[{component_name}] XSS injected successfully!{Style.RESET_ALL}")
                print(f"| {Fore.WHITE}[|||] {Style.RESET_ALL}{Style.BRIGHT}[{component_name}] The component version allows injecting code (XSS) via hiperlink according to CVE-2023-41592.{Style.RESET_ALL}")
                print(f"| {Fore.WHITE}[POC] {Style.RESET_ALL}{Style.BRIGHT}[{component_name}] See more details in https://hacker.soarescorp.com/cve/2023-41592/{Style.RESET_ALL}")
            else:
                print(f"| {Fore.WHITE}[|||] {Style.DIM}[{component_name}] XSS injected failed!{Style.RESET_ALL}")
                print(f"| {Fore.WHITE}[|||] {Style.DIM}[{component_name}] This version of the component is not vulnerable to CVE-2023-41592.{Style.RESET_ALL}")
    else:
        # The request failed or was redirected
        if response.status_code in (301, 302, 303, 307, 308):
            redirect_to = response.headers.get("Location", "unknown")
            print(
                f"| {Fore.WHITE}[|||] Request redirected to: {Style.DIM}[{redirect_to}]{Style.RESET_ALL}"
            )
            print(
                f"| {Fore.WHITE}[|||] {Style.DIM}[{component_name}] The froala_editor.js endpoint redirected instead of returning data.{Style.RESET_ALL}"
            )
        else:
            print(
                f"| {Fore.WHITE}[|||] {Style.DIM}[{component_name}] XSS injected failed!{Style.RESET_ALL}"
            )
            print(
                f"| {Fore.WHITE}[|||] {Style.DIM}[{component_name}] This version of the component is not vulnerable to CVE-2023-41592.{Style.RESET_ALL}"
            )
